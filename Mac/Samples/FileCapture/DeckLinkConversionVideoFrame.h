/* -LICENSE-START-
 ** Copyright (c) 2018 Blackmagic Design
 **  
 ** Permission is hereby granted, free of charge, to any person or organization 
 ** obtaining a copy of the software and accompanying documentation (the 
 ** "Software") to use, reproduce, display, distribute, sub-license, execute, 
 ** and transmit the Software, and to prepare derivative works of the Software, 
 ** and to permit third-parties to whom the Software is furnished to do so, in 
 ** accordance with:
 ** 
 ** (1) if the Software is obtained from Blackmagic Design, the End User License 
 ** Agreement for the Software Development Kit (“EULA”) available at 
 ** https://www.blackmagicdesign.com/EULA/DeckLinkSDK; or
 ** 
 ** (2) if the Software is obtained from any third party, such licensing terms 
 ** as notified by that third party,
 ** 
 ** and all subject to the following:
 ** 
 ** (3) the copyright notices in the Software and this entire statement, 
 ** including the above license grant, this restriction and the following 
 ** disclaimer, must be included in all copies of the Software, in whole or in 
 ** part, and all derivative works of the Software, unless such copies or 
 ** derivative works are solely in the form of machine-executable object code 
 ** generated by a source language processor.
 ** 
 ** (4) THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
 ** OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 ** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT 
 ** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 ** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, 
 ** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
 ** DEALINGS IN THE SOFTWARE.
 ** 
 ** A copy of the Software is available free of charge at 
 ** https://www.blackmagicdesign.com/desktopvideo_sdk under the EULA.
 ** 
 ** -LICENSE-END-
 */
#pragma once

#include <atomic>
#include <vector>
#include "DeckLinkAPI.h"

class DeckLinkConversionVideoFrame : public IDeckLinkVideoFrame
{
public:
	static const BMDTimeScale kDefaultConversionTimeScale = 100000;

	DeckLinkConversionVideoFrame();
	
	bool init(long width, long height, long rowBytes, BMDPixelFormat pixelFormat, BMDFrameFlags frameFlags);

	// IUnknown
	HRESULT QueryInterface(REFIID iid, LPVOID *ppv) override;
	ULONG AddRef() override;
	ULONG Release() override;

	// IDeckLinkVideoFrame
	long GetWidth() override;
	long GetHeight() override;
	long GetRowBytes() override;

	BMDPixelFormat GetPixelFormat() override;
	BMDFrameFlags GetFlags() override;
	HRESULT GetBytes(void **buffer) override;
	HRESULT GetTimecode(BMDTimecodeFormat format, IDeckLinkTimecode **timecode) override;
	HRESULT GetAncillaryData(IDeckLinkVideoFrameAncillary **ancillary) override;

private:
	std::atomic<ULONG>	m_refCount;
	long				m_width;
	long				m_height;
	long				m_rowBytes;
	BMDPixelFormat		m_pixelFormat;
	BMDFrameFlags		m_frameFlags;
	std::vector<char>	m_frameData;
	BMDTimeValue		m_frameTime;
	BMDTimeValue		m_frameDuration;
	BMDTimeScale		m_timeScale;
};
