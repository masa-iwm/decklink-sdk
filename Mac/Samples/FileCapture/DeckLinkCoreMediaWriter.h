/* -LICENSE-START-
 ** Copyright (c) 2018 Blackmagic Design
 **  
 ** Permission is hereby granted, free of charge, to any person or organization 
 ** obtaining a copy of the software and accompanying documentation (the 
 ** "Software") to use, reproduce, display, distribute, sub-license, execute, 
 ** and transmit the Software, and to prepare derivative works of the Software, 
 ** and to permit third-parties to whom the Software is furnished to do so, in 
 ** accordance with:
 ** 
 ** (1) if the Software is obtained from Blackmagic Design, the End User License 
 ** Agreement for the Software Development Kit (“EULA”) available at 
 ** https://www.blackmagicdesign.com/EULA/DeckLinkSDK; or
 ** 
 ** (2) if the Software is obtained from any third party, such licensing terms 
 ** as notified by that third party,
 ** 
 ** and all subject to the following:
 ** 
 ** (3) the copyright notices in the Software and this entire statement, 
 ** including the above license grant, this restriction and the following 
 ** disclaimer, must be included in all copies of the Software, in whole or in 
 ** part, and all derivative works of the Software, unless such copies or 
 ** derivative works are solely in the form of machine-executable object code 
 ** generated by a source language processor.
 ** 
 ** (4) THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
 ** OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 ** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT 
 ** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 ** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, 
 ** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
 ** DEALINGS IN THE SOFTWARE.
 ** 
 ** A copy of the Software is available free of charge at 
 ** https://www.blackmagicdesign.com/desktopvideo_sdk under the EULA.
 ** 
 ** -LICENSE-END-
 */

#import <string>
#import <map>
#import <mutex>
#import <AVFoundation/AVFoundation.h>
#import "DeckLinkAPI.h"
#import "DeckLinkMediaWriter.h"
#import "com_ptr.h"

@class AVAsset;
@class AVAssetWriter;
@class AVAssetWriterInput;

enum WriterState
{
	kWriterIdle,
	kWriterReady,
	kWriterStopping,
	kWriterError
};

class DeckLinkCoreMediaWriter : public DeckLinkMediaWriter
{
public:
	DeckLinkCoreMediaWriter();
	virtual ~DeckLinkCoreMediaWriter();

	bool		init(const std::string& filePath, long frameWidth, long frameHeight, BMDPixelFormat pixelFormat, BMDTimeValue duration, BMDTimeScale timeScale) override;
	uint32_t	audioBitsPerSample() const override;
	uint32_t	audioChannelCount() const override;
	void		writeFrame(com_ptr<IDeckLinkVideoFrame>& deckLinkFrame, BMDTimeValue streamTime, com_ptr<IDeckLinkAudioInputPacket>& deckLinkAudioPacket, const WriteResultHandlerFunc& resultHandler) override;
	bool		complete(bool save) override;

	std::string filePath() const override;

private:
	WriteResult	writeVideoFrame(com_ptr<IDeckLinkVideoFrame>& deckLinkFrame, BMDTimeValue streamTime);
	WriteResult	writeAudioPacket(com_ptr<IDeckLinkAudioInputPacket>& deckLinkAudioPacket);

	static const BMDTimeValue kInvalidVideoOffset = -1;
	static const BMDTimeValue kInvalidAudioOffset = -1;

	const std::map<BMDPixelFormat, CMPixelFormatType> kBMDCMPixelFormatMap =
	{
		{ bmdFormat8BitBGRA, kCMPixelFormat_32BGRA }
	};

	std::mutex					m_mutex;
	std::condition_variable		m_condition;
	AVAsset*					m_avAsset;
	AVAssetWriter*				m_avAssetWriter;
	AVAssetWriterInput*			m_audioInput;
	AVAssetWriterInput*			m_videoInput;
	AVAssetWriterInputPixelBufferAdaptor* m_videoInputPixelAdaptor;
	WriterState					m_writerState;
	std::atomic<bool>			m_writingComplete;
	std::string					m_filePath;

	// Video
	long						m_frameWidth;
	long						m_frameHeight;
	BMDTimeValue				m_frameDuration;
	BMDTimeScale				m_timeScale;
	BMDTimeValue				m_videoOffset;

	// Audio
	BMDTimeValue				m_audioStreamTime;
	BMDTimeValue				m_audioOffset;
	AudioStreamBasicDescription m_audioStreamDescription;
};
