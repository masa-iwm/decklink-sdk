/* -LICENSE-START-
 ** Copyright (c) 2018 Blackmagic Design
 **  
 ** Permission is hereby granted, free of charge, to any person or organization 
 ** obtaining a copy of the software and accompanying documentation (the 
 ** "Software") to use, reproduce, display, distribute, sub-license, execute, 
 ** and transmit the Software, and to prepare derivative works of the Software, 
 ** and to permit third-parties to whom the Software is furnished to do so, in 
 ** accordance with:
 ** 
 ** (1) if the Software is obtained from Blackmagic Design, the End User License 
 ** Agreement for the Software Development Kit (“EULA”) available at 
 ** https://www.blackmagicdesign.com/EULA/DeckLinkSDK; or
 ** 
 ** (2) if the Software is obtained from any third party, such licensing terms 
 ** as notified by that third party,
 ** 
 ** and all subject to the following:
 ** 
 ** (3) the copyright notices in the Software and this entire statement, 
 ** including the above license grant, this restriction and the following 
 ** disclaimer, must be included in all copies of the Software, in whole or in 
 ** part, and all derivative works of the Software, unless such copies or 
 ** derivative works are solely in the form of machine-executable object code 
 ** generated by a source language processor.
 ** 
 ** (4) THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
 ** OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 ** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT 
 ** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 ** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, 
 ** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
 ** DEALINGS IN THE SOFTWARE.
 ** 
 ** A copy of the Software is available free of charge at 
 ** https://www.blackmagicdesign.com/desktopvideo_sdk under the EULA.
 ** 
 ** -LICENSE-END-
 */

#import <Cocoa/Cocoa.h>
#import <memory>
#import <string>
#import "DeckLinkDeviceDiscovery.h"
#import "DeckLinkDeviceState.h"
#import "CocoaViewController.h"
#import "com_ptr.h"

@interface AppDelegate : NSObject <NSApplicationDelegate> {

	// GUI
	IBOutlet NSWindow*		m_window;

	// Preview
	IBOutlet NSView*		m_previewView;

	// Capture
	IBOutlet NSPopUpButton*	m_deviceList;
	IBOutlet NSPopUpButton* m_inputList;
	IBOutlet NSPopUpButton*	m_formatList;
	IBOutlet NSButton*		m_recordButton;
	IBOutlet NSButton*		m_formatDetection;
	IBOutlet NSTextField*	m_captureSignal;
	IBOutlet NSTextField*	m_infoText;

	intptr_t				m_selectedDevice;

	com_ptr<IDeckLinkScreenPreviewCallback>		m_screenPreviewCallback;

	std::unique_ptr<DeckLinkDeviceDiscovery>	m_deviceDiscovery;
	std::shared_ptr<DeviceManager>				m_deviceManager;
	std::unique_ptr<CocoaViewController>		m_viewController;

	// Media IO
	std::shared_ptr<DeckLinkMediaWriter>		m_mediaWriter;

	DeviceIOState								m_deviceState;
}

// UI Controls
- (IBAction)deviceSelected:(id)sender;
- (IBAction)inputSelected:(id)sender;
- (IBAction)formatSelected:(id)sender;
- (IBAction)recordClicked:(id)sender;
- (IBAction)formatAutoDetectClicked:(id)sender;

// Close the app when the main window is closed
- (BOOL)applicationShouldTerminateAfterLastWindowClosed:(NSApplication*)app;

// Device arrival/removal
- (void)updateDevice:(intptr_t)deviceID enabled:(BOOL)enabled;
- (void)addDevice:(intptr_t)deviceID displayName:(CFStringRef)displayName enabled:(BOOL)enabled;
- (void)removeDevice:(intptr_t)deviceID;
- (void)clearVideoInputConnectionList;
- (void)addVideoInputConnection:(NSInteger)connectionID connectionName:(CFStringRef)connectionName;
- (void)clearDisplayModeList;
- (void)addDisplayMode:(NSInteger)displayMode displayModeName:(CFStringRef)displayModeName;
- (void)captureFromAvailableDevice;
- (void)capture:(BOOL)active;

// Device status
- (void)setSignalPresence:(BOOL)signalPresent;
- (void)setDisplayMode:(NSInteger)displayMode;
- (void)setVideoInputConnection:(NSInteger)videoInputConnection;

// Recording status
- (void)saveRecodedFile:(const std::string&)filePath;

// UI state
- (void)showError:(CFStringRef)title detail:(CFStringRef)detail;
- (void)showInfo:(CFStringRef)title detail:(CFStringRef)detail;
- (void)enableUI:(BOOL)enabled;
- (void)setDeviceState:(DeviceIOState)deviceState;

- (com_ptr<IDeckLinkScreenPreviewCallback>)screenPreviewCallback;

@end
