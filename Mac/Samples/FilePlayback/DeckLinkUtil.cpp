/* -LICENSE-START-
 ** Copyright (c) 2018 Blackmagic Design
 **
 ** Permission is hereby granted, free of charge, to any person or organization
 ** obtaining a copy of the software and accompanying documentation covered by
 ** this license (the "Software") to use, reproduce, display, distribute,
 ** execute, and transmit the Software, and to prepare derivative works of the
 ** Software, and to permit third-parties to whom the Software is furnished to
 ** do so, all subject to the following:
 **
 ** The copyright notices in the Software and this entire statement, including
 ** the above license grant, this restriction and the following disclaimer,
 ** must be included in all copies of the Software, in whole or in part, and
 ** all derivative works of the Software, unless such copies or derivative
 ** works are solely in the form of machine-executable object code generated by
 ** a source language processor.
 **
 ** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 ** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 ** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 ** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 ** DEALINGS IN THE SOFTWARE.
 ** -LICENSE-END-
 */

#include "DeckLinkUtil.h"

static BMDDisplayMode LookupDisplayMode(float frameRate, long frameWidth, long frameHeight)
{
	BMDDisplayMode candidateDisplayMode = bmdModeUnknown;

	// Find the closest matching BMDDisplayMode for the given frame rate and resolution
	if (frameHeight <= 486 && frameWidth <= 720 && frameRate > 29.0 && frameRate < 30.0)
		candidateDisplayMode = bmdModeNTSC;
	else if (frameHeight <= 576 && frameWidth <= 720 && frameRate == 25.0)
		candidateDisplayMode = bmdModePAL;
	else if (frameHeight <= 720 && frameWidth <= 1280)
	{
		if (frameRate == 50.0)
			candidateDisplayMode = bmdModeHD720p50;
		else if (frameRate > 59.0 && frameRate < 60.0)
			candidateDisplayMode = bmdModeHD720p5994;
		else if (frameRate == 60.0)
			candidateDisplayMode = bmdModeHD720p60;
	}
	else if (frameHeight <= 1080 && frameWidth <= 1920)
	{
		if (frameRate > 23.0 && frameRate < 24.0)
			candidateDisplayMode = bmdModeHD1080p2398;
		else if (frameRate == 24.0)
			candidateDisplayMode = bmdModeHD1080p24;
		else if (frameRate == 25.0)
			candidateDisplayMode = bmdModeHD1080p25;
		else if (frameRate > 29.0 && frameRate < 30.0)
			candidateDisplayMode = bmdModeHD1080p2997;
		else if (frameRate == 30.0)
			candidateDisplayMode = bmdModeHD1080p30;
		else if (frameRate == 50.0)
			candidateDisplayMode = bmdModeHD1080p50;
		else if (frameRate > 59.0 && frameRate < 60.0)
			candidateDisplayMode = bmdModeHD1080p5994;
		else if (frameRate == 60.0)
			candidateDisplayMode = bmdModeHD1080p6000;
	}
	else if (frameHeight <= 2160 && frameWidth <= 3840)
	{
		if (frameRate > 23.0 && frameRate < 24.0)
			candidateDisplayMode = bmdMode4K2160p2398;
		else if (frameRate == 24.0)
			candidateDisplayMode = bmdMode4K2160p24;
		else if (frameRate == 25.0)
			candidateDisplayMode = bmdMode4K2160p25;
		else if (frameRate > 29.0 && frameRate < 30.0)
			candidateDisplayMode = bmdMode4K2160p2997;
		else if (frameRate == 30.0)
			candidateDisplayMode = bmdMode4K2160p30;
		else if (frameRate == 50.0)
			candidateDisplayMode = bmdMode4K2160p50;
		else if (frameRate > 59.0 && frameRate < 60.0)
			candidateDisplayMode = bmdMode4K2160p5994;
		else if (frameRate == 60.0)
			candidateDisplayMode = bmdMode4K2160p60;
	}
	return candidateDisplayMode;
}

namespace DeckLinkUtil
{
	BMDDisplayMode GetDisplayMode(float frameRate, long frameWidth, long frameHeight)
	{
		BMDDisplayMode result = LookupDisplayMode(frameRate, frameWidth, frameHeight);

		if (result != bmdModeUnknown)
			return result;

		// Nothing matched, round frame rate and try again
		frameRate = round(frameRate);

		return LookupDisplayMode(frameRate, frameWidth, frameHeight);
	}
}
